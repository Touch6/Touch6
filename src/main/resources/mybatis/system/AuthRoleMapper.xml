<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.touch6.business.mybatis.system.AuthRoleMybatisDao">
    <insert id="insertAuthRole" parameterType="com.touch6.business.entity.system.AuthRole">
        insert ignore into t_si_auth_role(
        role_id,auth_id
        )
        values(
        #{roleId},#{authId}
        )
    </insert>
    <select id="findByAuthRole" resultType="com.touch6.business.entity.system.AuthRole"
            parameterType="com.touch6.business.entity.system.AuthRole">
        select
            ar.auth_id,a.name authName,
            ar.role_id,r.name roleName
        from t_si_auth_role ar
        left join t_si_auth a on a.auth_id=ar.auth_id
        left join t_si_role r on r.role_id=ar.role_id
        where ar.auth_id=#{authId} and ar.role_id=#{roleId}
        group by
            ar.auth_id,a.name,
            ar.role_id,r.name
    </select>
    <update id="updateAuthRole" parameterType="hashMap">
        update t_si_auth_role
        <set>
            auth_id=#{newAuthId}
        </set>
        where auth_id=#{authId} and role_id=#{roleId}
    </update>
    <delete id="deleteAuthRole" parameterType="com.touch6.business.entity.system.AuthRole">
        delete from t_si_auth_role where auth_id=#{authId} and role_id=#{roleId}
    </delete>
    <delete id="deleteAuthRoleByRoleId" parameterType="long">
        delete from t_si_auth_role where role_id=#{roleId}
    </delete>
    <select id="findAll" resultType="com.touch6.business.entity.system.AuthRole">
        select
            ar.auth_id,a.name authName,
            ar.role_id,r.name roleName
        from t_si_auth_role ar
        left join t_si_auth a on a.auth_id=ar.auth_id
        left join t_si_role r on r.role_id=ar.role_id
        group by
            ar.auth_id,a.name,
            ar.role_id,r.name
        order by
            a.auth_id asc
    </select>
</mapper>